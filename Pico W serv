import network
import socket
from time import sleep
from picozero import pico_temp_sensor, pico_led
import machine
from machine import Pin
import time #importing time for delay  


# Defining motor pins

#OUT1  and OUT2
In1=Pin(6,Pin.OUT) 
In2=Pin(7,Pin.OUT)  
EN_A=Pin(8,Pin.OUT)



#OUT3  and OUT4
In3=Pin(4,Pin.OUT)  
In4=Pin(3,Pin.OUT)  
EN_B=Pin(2,Pin.OUT)

EN_A.high()
EN_B.high()
# Forward
def move_forward():
    In1.high()
    In2.low()
    In3.high()
    In4.low()
    
# Backward
def move_backward():
    In1.low()
    In2.high()
    In3.low()
    In4.high()
    
#Turn Right
def turn_right():
    In1.low()
    In2.low()
    In3.low()
    In4.high()
    
#Turn Left
def turn_left():
    In1.low()
    In2.high()
    In3.low()
    In4.low()
   
#Stop
def stop():
    In1.low()
    In2.low()
    In3.low()
    In4.low()


ssid = 'Note'
password = 'qwer1234'

def connect():
    #Connect to WLAN
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect(ssid, password)
    while wlan.isconnected() == False:
        print('Waiting for connection...')
        sleep(1)
    ip = wlan.ifconfig()[0]
    print(f'Connected on {ip}')
    return ip

def webpage(temperature, state):
    #Template HTML
    html = f"""
            <!DOCTYPE html>
            <html>
            <form action="./move_forward">
            <input type="submit" value="move_forward" />
            </form>
            <form action="./move_backward">
            <input type="submit" value="move_backward" />
            </form>
            <form action="./turn_right">
            <input type="submit" value="turn_right" />
            </form>
            <form action="./turn_left">
            <input type="submit" value="turn_left" />
            </form>
            <form action="./stop">
            <input type="submit" value="stop" />
            </form>           
            <p>LED is {state}</p>
            <p>Temperature is {temperature}</p>
            </body>
            </html>
            """
    return str(html)

def open_socket(ip):
    # Open a socket
    address = (ip, 80)
    connection = socket.socket()
    connection.bind(address)
    connection.listen(1)
    return connection

def serve(connection):
    #Start a web server
    state = 'OFF'
    pico_led.off()
    temperature = 0
    while True:
        client = connection.accept()[0]
        request = client.recv(1024)
        request = str(request)
        try:
            request = request.split()[1]
        except IndexError:
            pass
        if request == '/move_forward?':
            move_forward()
            state = 'move_forward'
        elif request =='/move_backward?':
            move_backward()
            state = 'move_backward'
        elif request =='/turn_right?':
            turn_right()
            state = 'turn_right'
        elif request =='/turn_left?':
            turn_left()
            state = 'turn_left'
        elif request =='/stop?':
            stop()
            state = 'stop'
        temperature = pico_temp_sensor.temp
        html = webpage(temperature, state)
        client.send(html)
        client.close()

try:
    ip = connect()
    connection = open_socket(ip)
    serve(connection)
except KeyboardInterrupt:
    machine.reset()
